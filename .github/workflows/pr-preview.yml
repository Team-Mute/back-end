name: pr-preview
on:
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install & Configure Koyeb CLI
        uses: koyeb-community/koyeb-actions@v2
        with:
          api_token: ${{ secrets.KOYEB_API_TOKEN }}

      # 필수 시크릿 존재 확인 (비어있으면 배포 전에 실패)
      - name:
        Preflight: required env present?
        run: |
          test -n "${{ secrets.NEON_JDBC_URL }}" || (echo "NEON_JDBC_URL empty"; exit 1)
          test -n "${{ secrets.NEON_DB_USER }}"  || (echo "NEON_DB_USER empty"; exit 1)
          test -n "${{ secrets.NEON_DB_PASS }}"  || (echo "NEON_DB_PASS empty"; exit 1)

      - name: Deploy PR preview to Koyeb (buildpack)
        uses: koyeb/action-git-deploy@v1
        with:
          app-name: mute-preview
          service-name: pr-${{ github.event.pull_request.number }} # PR마다 고유 서비스
          git-builder: buildpack
          service-regions: fra
          service-instance-type: micro
          service-ports: "8080:http"
          service-routes: "/:8080"
          # 한 줄, 공백 없이 콤마로 구분
          service-env: "SPRING_DATASOURCE_URL=${{ secrets.NEON_JDBC_URL }},SPRING_DATASOURCE_USERNAME=${{ secrets.NEON_DB_USER }},SPRING_DATASOURCE_PASSWORD=${{ secrets.NEON_DB_PASS }},AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }},AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }},AWS_REGION=${{ secrets.AWS_REGION }},AWS_STACK_AUTO=${{ secrets.AWS_STACK_AUTO }},AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }},PORT=8080"

      # 배포 후 URL 가져오기
      - name: Get Koyeb service URL
        id: url
        run: |
          DOMAIN=$(koyeb service get mute-preview/pr-${{ github.event.pull_request.number }} --output json | jq -r '.service.domains[0].name')
          echo "url=https://$DOMAIN" >> $GITHUB_OUTPUT

      # 헬스체크 (actuator 우선, 실패 시 / 로 폴백)
      - name: Probe health
        run: |
          URL="${{ steps.url.outputs.url }}"
          for i in {1..40}; do
            curl -fsS "$URL/actuator/health" && exit 0
            curl -fsS "$URL" && exit 0
            sleep 3
          done
          echo "Health check failed ❌"; exit 1

      # PR 코멘트로 미리보기 링크 남기기
      - name: Comment preview link
        uses: actions/github-script@v7
        with:
          script: |
            const url = "${{ steps.url.outputs.url }}";
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: `🚀 Preview is live: ${url}`
            });
