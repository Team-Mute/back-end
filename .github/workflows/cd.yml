name: cd
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Skip actual deployment (DRY_RUN=true)"
        required: false
        default: "false"

concurrency:
  group: cd-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      DRY_RUN: ${{ github.event.inputs.dry_run }}
    steps:
      - uses: actions/checkout@v4

      - name: Install & Configure Koyeb CLI
        uses: koyeb-community/koyeb-actions@v2
        with:
          api_token: ${{ secrets.KOYEB_API_TOKEN }}

      # 배포 전 필수 시크릿 확인
      - name:
        Preflight: required env present?
        run: |
          test -n "${{ secrets.NEON_JDBC_URL }}" || (echo "NEON_JDBC_URL empty"; exit 1)
          test -n "${{ secrets.NEON_DB_USER }}"  || (echo "NEON_DB_USER empty"; exit 1)
          test -n "${{ secrets.NEON_DB_PASS }}"  || (echo "NEON_DB_PASS empty"; exit 1)

      # 실제 배포 (DRY_RUN이면 스킵)
      - name: Deploy to Koyeb (buildpack)
        if: ${{ env.DRY_RUN != 'true' }}
        uses: koyeb/action-git-deploy@v1
        with:
          app-name: my-spring-app              # 원하는 앱 이름
          service-name: mute-api               # 서비스 이름
          git-builder: buildpack
          service-regions: fra
          service-instance-type: micro
          service-ports: "8080:http"
          service-routes: "/:8080"
          service-env: "SPRING_DATASOURCE_URL=${{ secrets.NEON_JDBC_URL }},SPRING_DATASOURCE_USERNAME=${{ secrets.NEON_DB_USER }},SPRING_DATASOURCE_PASSWORD=${{ secrets.NEON_DB_PASS }},AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }},AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }},AWS_REGION=${{ secrets.AWS_REGION }},AWS_STACK_AUTO=${{ secrets.AWS_STACK_AUTO }},AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }},PORT=8080"

      # 서비스 URL 가져와서 헬스체크
      - name: Get Koyeb service URL
        if: ${{ env.DRY_RUN != 'true' }}
        id: url
        run: |
          DOMAIN=$(koyeb service get my-spring-app/mute-api --output json | jq -r '.service.domains[0].name')
          echo "url=https://$DOMAIN" >> $GITHUB_OUTPUT

      - name: Probe health
        if: ${{ env.DRY_RUN != 'true' }}
        run: |
          URL="${{ steps.url.outputs.url }}"
          for i in {1..40}; do
            curl -fsS "$URL/actuator/health" && exit 0
            curl -fsS "$URL" && exit 0
            sleep 3
          done
          echo "Health check failed ❌"; exit 1
