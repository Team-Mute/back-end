name: cd
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Skip actual deployment (DRY_RUN=true)"
        required: false
        default: "false"

concurrency:
  group: cd-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      DRY_RUN: ${{ github.event.inputs.dry_run }}
    steps:
      - uses: actions/checkout@v4

      - name: Install & Configure Koyeb CLI
        uses: koyeb-community/koyeb-actions@v2
        with:
          api_token: ${{ secrets.KOYEB_API_TOKEN }}

      # 실제 배포 (DRY_RUN이면 스킵)
      - name: Deploy to Koyeb (Buildpacks)
        if: ${{ env.DRY_RUN != 'true' }}
        uses: koyeb/action-git-deploy@v1
        with:
          app-name: my-spring-app          # 원하는 앱 이름
          service-name: mute-api           # 서비스 이름
          git-builder: buildpack
          # 빌드팩에 자바 버전 전달 (Paketo)
          build-env: "BP_JAVA_VERSION=17.*"
          # 리전/스펙(필요 시 조정)
          service-regions: fra
          service-instance-type: micro
          # 라우팅/포트
          service-ports: "8080:http"
          service-routes: "/:8080"
          # 헬스체크 엔드포인트가 있을 때만 사용(없으면 이 줄 삭제)
          # service-checks: "8080:http:/actuator/health"
          # 런타임 ENV (Koyeb 콘솔에 안 넣었다면 여기서 주입)
          service-env: >-
            SPRING_DATASOURCE_URL=${{ secrets.NEON_JDBC_URL }},
            SPRING_DATASOURCE_USERNAME=${{ secrets.NEON_DB_USER }},
            SPRING_DATASOURCE_PASSWORD=${{ secrets.NEON_DB_PASS }},
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }},
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }},
            AWS_REGION=${{ secrets.AWS_REGION }},
            AWS_STACK_AUTO=${{ secrets.AWS_STACK_AUTO }},
            AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }},
            PORT=8080
