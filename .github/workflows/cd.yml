name: cd
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Skip actual deployment (DRY_RUN=true)"
        required: false
        default: "false"

concurrency:
  group: cd-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      DRY_RUN: ${{ github.event.inputs.dry_run }}
    steps:
      - uses: actions/checkout@v4

      - name: Install & Configure Koyeb CLI
        uses: koyeb-community/koyeb-actions@v2
        with:
          api_token: ${{ secrets.KOYEB_API_TOKEN }}

      # 실제 배포 (DRY_RUN이면 스킵)
      - name: Deploy from Git (Buildpacks)
        if: ${{ env.DRY_RUN != 'true' }}
        uses: koyeb/action-git-deploy@v1
        with:
          app-name: my-spring-app
          service-name: mute-api
          git-builder: buildpack

          # 여러 줄 값은 반드시 블록 스타일 사용
          service-env: |
            SPRING_PROFILES_ACTIVE=ci
            SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}
            SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
            SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
            CLOUD_AWS_CREDENTIALS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY_ID }}
            CLOUD_AWS_CREDENTIALS_SECRET_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            CLOUD_AWS_REGION_STATIC=${{ secrets.AWS_REGION }}
            CLOUD_AWS_STACK_AUTO=${{ secrets.AWS_STACK_AUTO }}
            CLOUD_AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}

          # 라우팅/포트
          service-ports: "8080:http"
          service-routes: "/:8080"
          # (옵션) 액추에이터 사용 시 헬스체크
          # service-checks: "8080:http:/actuator/health"
